name: Test Build (快速测试)

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: '测试类型'
        required: true
        default: 'version-only'
        type: choice
        options:
          - version-only
          - build-only
          - full-build

# 添加必要的权限
permissions:
  contents: read
  actions: read

env:
  FLUTTER_VERSION: '3.29.3'
  JAVA_VERSION: '17'

jobs:
  test-version:
    name: 测试版本生成
    runs-on: ubuntu-latest
    if: contains(fromJson('["version-only", "full-build"]'), github.event.inputs.test_type)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Test version generator
        run: |
          echo "🧪 测试版本生成脚本..."
          ./.github/scripts/version-generator.sh
          
          echo "🧪 测试Release生成脚本..."
          ./.github/scripts/release-generator.sh

  test-build:
    name: 测试构建流程
    runs-on: ubuntu-latest
    if: contains(fromJson('["build-only", "full-build"]'), github.event.inputs.test_type)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Generate version
        run: ./.github/scripts/version-generator.sh

      - name: Analyze code
        run: flutter analyze

      - name: Test build (without full compilation)
        run: |
          echo "🧪 测试构建配置..."
          flutter build apk --debug --build-number=999999 --dry-run || true
          
          echo "✅ 构建配置测试完成"

  test-complete:
    name: 完整测试总结
    runs-on: ubuntu-latest
    needs: [test-version, test-build]
    if: always()
    
    steps:
      - name: Test Results Summary
        run: |
          echo "🎯 测试结果总结："
          echo "版本生成测试: ${{ needs.test-version.result }}"
          echo "构建流程测试: ${{ needs.test-build.result }}"
          
          if [ "${{ needs.test-version.result }}" = "success" ] && [ "${{ needs.test-build.result }}" = "success" ]; then
            echo "✅ 所有测试通过！可以使用完整的构建和发布流程。"
          else
            echo "❌ 部分测试失败，请检查配置。"
          fi